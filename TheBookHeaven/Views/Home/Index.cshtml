@model Dictionary<string, List<TheBookHeaven.Models.Book>>

@{
    ViewData["Title"] = "Home";
}

<div class="px-4">
    <!-- Hero Section -->
    <div class="text-center mb-5">
        <img src="~/images/banner.jpeg" class="img-fluid rounded shadow-sm" alt="Welcome Banner" style="max-height: 450px; object-fit: cover;" />
        <h2 class="mt-3">Welcome to TheBookHeaven</h2>
        <p class="text-muted">Discover the best books in every category.</p>
    </div>

    <!-- Section Template -->
    @foreach (var category in Model.Keys.Reverse())
    {
        <div class="mb-5">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h3>@category</h3>
                <button class="btn btn-outline-primary btn-sm" onclick="toggleBooks('@category')">View All</button>
            </div>

            <!-- Books that are initially shown (show only first 6) -->
            <div class="row initial-books" id="@category-books">
                <!-- Show only first 6 books initially -->
                @foreach (var book in Model[category].Take(6))
                {
                    <div class="col-lg-2 col-md-3 col-sm-4 col-6 mb-4">
                        <div class="card h-100 d-flex flex-column shadow-sm">
                            <!-- Clickable area for navigation (image and title only) -->
                            <a href="@Url.Action("Details", "Book", new { id = book.Id })" class="text-decoration-none">
                                <img src="@book.ImageUrl"
                                     class="card-img-top"
                                     alt="@book.Title"
                                     style="height: 250px; object-fit: cover;" />
                                <div class="card-body d-flex flex-column p-2">
                                    <h6 class="card-title text-truncate text-dark" title="@book.Title">@book.Title</h6>
                                </div>
                            </a>
                            <!-- Price and Add to Cart button -->
                            <div class="card-body d-flex flex-column p-2 pt-0">
                                <p class="card-text text-muted small mb-2">$@book.Price</p>
                                <button onclick="addToCart(@book.Id, event)"
                                        class="btn btn-outline-primary btn-sm mt-auto w-100">
                                    <i class="bi bi-cart-plus"></i> Add to Cart
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Hidden books (initially hidden) -->
            <div class="row more-books" id="@category-more-books" style="display:none;">
                <!-- Show the remaining books -->
                @foreach (var book in Model[category].Skip(6))
                {
                    <div class="col-lg-2 col-md-3 col-sm-4 col-6 mb-4">
                        <div class="card h-100 d-flex flex-column shadow-sm">
                            <!-- Clickable area for navigation (image and title only) -->
                            <a href="@Url.Action("Details", "Book", new { id = book.Id })" class="text-decoration-none">
                                <img src="@book.ImageUrl"
                                     class="card-img-top"
                                     alt="@book.Title"
                                     style="height: 250px; object-fit: cover;" />
                                <div class="card-body d-flex flex-column p-2">
                                    <h6 class="card-title text-truncate text-dark" title="@book.Title">@book.Title</h6>
                                </div>
                            </a>
                            <!-- Price and Add to Cart button -->
                            <div class="card-body d-flex flex-column p-2 pt-0">
                                <p class="card-text text-muted small mb-2">$@book.Price</p>
                                <button onclick="addToCart(@book.Id, event)"
                                        class="btn btn-outline-primary btn-sm mt-auto w-100">
                                    <i class="bi bi-cart-plus"></i> Add to Cart
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

<!-- JavaScript to handle the toggling and cart functionality -->
<script>
    function toggleBooks(category) {
        // Get the more books section and the button for the category
        var moreBooks = document.getElementById(category + '-more-books');
        var initialBooks = document.getElementById(category + '-books');
        var button = event.target;

        // Toggle visibility of the more books section
        if (moreBooks.style.display === "none") {
            moreBooks.style.display = "flex";  // Show the remaining books with flex
            button.innerText = "View Less";  // Change button text to "View Less"
        } else {
            moreBooks.style.display = "none";  // Hide the remaining books
            button.innerText = "View All";  // Change button text back to "View All"
        }
    }

    // Updated addToCart function to prevent navigation conflict
    function addToCart(bookId, event) {
        // Prevent the click from bubbling up to parent elements
        if (event) {
            event.stopPropagation();
            event.preventDefault();
        }

        // Make AJAX call to add item to cart
        fetch('@Url.Action("AddToCart", "Book")?id=' + bookId, {
            method: 'GET'
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Update cart count 
                var cartCountElement = document.getElementById('cart-count');
                if (cartCountElement && data.cartCount) {
                    cartCountElement.textContent = data.cartCount;
                }

                // Show success message 
                alert(data.message || 'Item added to cart successfully!');
            } else {
                alert(data.message || 'Failed to add item to cart.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while adding the item to cart.');
        });
    }
</script>